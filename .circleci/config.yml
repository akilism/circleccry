version: 2
# we now have TWO jobs, so that a workflow can coordinate them!
jobs: 
 # This is our first job.
  one:
  # it uses the docker executors
    docker: 
      - image: circleci/ruby:2.4.1 # specifically, a docker image with ruby 2.4.1
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - checkout # this pulls pulls code down from GitHub
      - run: echo "A first hello" # This prints "A first hello" to stdout.
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspaces" > my_workspace/echo-output
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: my_workspace
          # Must be relative path from root
          paths:
            - echo-output  
  # This is our second job.
  two: 
  # it runs inside a docker image, the same as above.
      docker: 
        - image: circleci/ruby:2.4.1
      steps:
        - checkout
        - run: echo "A more familiar hi" # We run a similar echo command to above.
        - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: my_workspace

      - run: |
          if [[ $(cat my_workspace/echo-output) == "Trying out workspaces" ]]; then
            echo "It worked!";
          else
            echo "Nope!"; exit 1
          fi
# Under the workflows: map, we can coordinate our two jobs, defined above.
workflows:
  version: 2
   # this is the name of our workflow
  one_and_two:
    # and here we list the jobs we are going to run.
    jobs: 
      - one
      - two
        requires:
          - one

